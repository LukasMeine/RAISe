swagger: '2.0'

# This is your document metadata
info:
  version: "0.3.0"
  title: UIOT RAISE API

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /client/list/:
    # This is a HTTP operation
    get:
      description: Get registered clients
      
      parameters:
        # An example parameter that is in query and is required
        -
          name: name
          in: query
          description: client name
          required: false
          type: string
          format: text

        -
          name: processor
          in: query
          description: client processor name
          required: false
          type: string
          format: text

        -
          name: channel
          in: query
          description: client communication channel id
          required: false
          type: number
          format: int

        -
          name: host
          in: query
          description: client host name (for example - ip, domain...)
          required: false
          type: string
          format: text

        -
          name: tag
          in: query
          description: client tag
          required: false
          type: string
          format: text

      responses:
        200:
          description: Successful response
          schema:
            title: clients
            type: object
            properties:
              code:
                type: integer
              clients:
                type: array
                items:
                    $ref: '#/definitions/Client'
        401:
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
            
            
            
  /client/list_service_values/:
    # This is a HTTP operation
    get:
      tags:
        - client
        - service
      description:
       Get a list containing the information that was provided by a device.
      parameters:
        # An example parameter that is in query and is required
        -
          name: token
          in: body
          description: client token
          required: true
          type: string
          format: text
        
        -
          name: start_date
          in: body
          description: In the case of a search between a time interval, this is the starting date
          required: false
          type: timestamp
          format: date
          
        -
          name: end_date
          in: body
          description: In the case of a search between a time interval, this is the ending date
          required: false
          type: timestamp
          format: date
          
        -
          name: limit
          in: body
          description: Limits the amount of records for request. Used to prevent memory issues. 
          required: true
          type: integer
          format: integer
          
        -
          name: order
          in: body
          description: Bool. 0 for asc and 1 for desc.
          required: true
          type: bool
          format: bool

        -
          name: name
          in: body
          description: client name
          required: false
          type: string
          format: text

        -
          name: processor
          in: body
          description: client processor name
          required: false
          type: string
          format: text

        -
          name: channel
          in: body
          description: client communication channel id
          required: false
          type: number
          format: int

        -
          name: host
          in: body
          description: client host name (for example - ip, domain...)
          required: false
          type: string
          format: text

        -
          name: tag
          in: body
          description: client tag
          required: false
          type: string
          format: text

      responses:
        200:
          description: Successful response
          schema:
            title: clients
            type: object
            properties:
              code:
                type: integer
              values:
                type: array
                items:
                    $ref: '#/definitions/Service_values_list'
        401:
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests
          schema:
            $ref: '#/definitions/ErrorResponse'
        400:
          description: Invalid parameters
          schema:
            $ref: '#/definitions/ErrorResponse'


  /client/register/:
     
    post:
      tags:
        - client
        - register
      description: Register a client
      parameters:
        - name: client
          in: body
          required: true
          description: client attributes
          schema:
           $ref: '#/definitions/Client'

      responses:
        200:
          description: OK
          schema:
           $ref: '#/definitions/TokenResponse'
        429:
          description: Too many requests
          schema:
            $ref: '#/definitions/ErrorResponse' 
        400:
          description: Invalid parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbbiden
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'    

  /service/register/:
     
    post:
      tags:
        - service
        - register
      description: Register an array of services
      parameters:
        - name: token 
          required: true
          description: client token
          type: string
          
        - name: services
          in: body
          required: true
          description: an array of services to be registered
          schema:
          type: array
          items:
           $ref: '#/definitions/Service'
        
        - name: type
          required: true
          description: indicates if service actuates on environment
          type: boolean

      responses:
        200:
          description: OK
          schema:
           $ref: '#/definitions/TokenResponse'
        429:
          description: Too many requests
          schema:
            $ref: '#/definitions/ErrorResponse' 
        400:
          description: Invalid parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbbiden
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse' 
        401:
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/ErrorResponse'    

  /service/send_values/:
    
    post:
      tags:
        - service
      description: Send service temporal information  
      parameters:
        - name: token
          in: body
          required: true
          description: client token 
          schema:
          type: string
          
        - name: services
          required: true
          description: Send captured data
          type: array
          items:
           $ref: '#/definitions/ServiceVal'

      responses:
        200:
          description: OK
        403:
          description: Forbbiden
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests
          schema:
            $ref: '#/definitions/ErrorResponse'  
        401:
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/ErrorResponse'    
            
  /service/list/:
    
    get:
      tags:
        - service
        - list
      description: Lists services accessible by the device
      parameters:
        - name: token
          in: body
          required: true
          description: client token
          schema:
          type: string
      
      responses:
        200:
          description: Successful response
          schema:
            title: services
            type: object
            properties:
              code:
                type: integer
              values:
                type: array
                items:
                  service:
                  type: string
                      
        403:
          description: Forbbiden
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests
          schema:
            $ref: '#/definitions/ErrorResponse'  
        401:
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/ErrorResponse'    
            
  /log/list/:
    
    get:
      tags:
        - log
        - list
      description: Returns a list containing the headers log stored on the server.
      parameters:
        - 
          name: token
          in: body
          required: true
          description: client token
          schema:
          type: string
        
        -
          name: start_date
          in: body
          description: In the case of a search between a time interval, this is the starting date
          required: true
          type: timestamp
          format: date
          
        -
          name: end_date
          in: body
          description: In the case of a search between a time interval, this is the ending date
          required: true
          type: timestamp
          format: date
          
        -
          name: limit
          in: body
          description: Limits the amount of records for request. Used to prevent memory issues. 
          required: true
          type: integer
          format: integer
          
        -
          name: order
          in: body
          description: Bool. 0 for asc and 1 for desc.
          required: false
          type: bool
          format: bool
        
      
      responses:
        200:
          description: Successful response
          schema:
            title: services
            type: object
            properties:
              code:
                type: integer
              values:
                type: array
                items:
                  $ref: '#/definitions/logs'
                      
        403:
          description: Forbbiden
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests
          schema:
            $ref: '#/definitions/ErrorResponse'  
        401:
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/ErrorResponse'    
    
    

definitions:
  
  Client:
    type: object
    properties:
      name:
        type: string
      chipset:
        type: string
      mac:
        type: string
      serial:
        type: string
      processor:
        type: string
      channel:
        type: integer #transformar em um enum
      
          
          
  Service_values_list:
    type: object
    properties:
      id:
        type: integer
      service:
        type: string
      value:
        type: string
          
          
  logs:
    type: object
    properties:
      id:
        type: integer
      header_code:
        type: integer
      message:
        type: string
        
  Service:
    type: object
    properties:
      name:
        type: string
      return:
        type: string  #transformar em um enum
      params:
        type: array
        items:
           $ref: '#/definitions/Parameter'
           
  ServiceVal:
    type: object
    properties:
      service_id:
        type: integer
      params:
        type: array
        items:
           $ref: '#/definitions/Parameter'         
  
  Parameter:
    type: object
    properties:
      name: 
        type: string
      type: 
        type: string #transformar em um enum

  ErrorResponse:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
  
  TokenResponse:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
      token:
        type: string
  
  ServiceResponse:
    type: object
    properties:
      code:
        type: integer
      services: 
        type: array
        items:
            $ref: '#/definitions/RegisterService'   
           
        
  RegisterService:
    type: object
    properties:
      name:
        type: string
      service_id:
        type: integer