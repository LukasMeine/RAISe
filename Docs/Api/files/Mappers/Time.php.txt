<?php

/**
 * UIoT Service Layer
 * @version alpha
 *                          88
 *                          ""              ,d
 *                                          88
 *              88       88 88  ,adPPYba, MM88MMM
 *              88       88 88 a8"     "8a  88
 *              88       88 88 8b       d8  88
 *              "8a,   ,a88 88 "8a,   ,a8"  88,
 *               `"YbbdP'Y8 88  `"YbbdP"'   "Y888
 *
 * @author Universal Internet of Things
 * @license MIT <https://opensource.org/licenses/MIT>
 * @copyright University of BrasÃ­lia
 */

namespace UIoT\Mappers;

/**
 * Class Time
 * @package UIoT\Mappers
 */
class Time
{
    /**
     * Create a new Instance of Time if does'nt exists
     *
     * This method does the Singleton Routine Pattern
     * to get the instance of Json class.
     *
     * @return Time
     */
    public static function getInstance()
    {
        static $instance = null;

        if (null === $instance) {
            $instance = new static();
        }

        return $instance;
    }

    /**
     * Returns the current time
     * based in the UNIX timestamp
     *
     * @return int
     */
    public function getTime()
    {
        return time();
    }

    /**
     * Compare times with precision of seconds
     * by checking which time is lower than other
     *
     * If the first time is lower than the second the
     * result will be false, in other ways the result
     * will be true
     *
     * @param int $timeOne first Time to be compared
     * @param int $timeTwo second Time to be compared
     * @return bool If FirstTime is equal or higher than SecondTime
     */
    public function compareTimes($timeOne, $timeTwo)
    {
        return $timeOne >= $timeTwo;
    }
}

